#############################################################################################
# (c) 2021 Vlad Estivill-Castro. A makefile to compile a LLFSM machine locally on te host
# using the new version of ucfsm we know compiles for the debian/arm  Ubuntu/Linux Intel
# and the TI/PRU
#
# Strategy is to copy
# all files of ucfsm
# all fles of the machine
# compile in a local directory
#############################################################################################

ifndef PRU_CGT
define ERROR_BODY

*******************************************************************************
PRU_CGT environment variable is not set. Examples of a path (Desktop Linux):
export PRU_CGT=~/ti/ccs1010/ccs/tools/compiler/ti-cgt-pru_2.3.3


/path/to/pru/code/gen/tools/ti-cgt-pru_2.1.2
(Windows):
set PRU_CGT=C:/path/to/pru/code/gen/tools/ti-cgt-pru_2.1.2

(ARM Linux):
export PRU_CGT=/usr/share/ti/cgt-pru

*ARM Linux also needs to create a symbolic link to the /usr/bin/ directory in
order to use the same Makefile
(ARM Linux):
ln -s /usr/bin/ /usr/share/ti/cgt-pru/bin
*******************************************************************************

endef
$(error $(ERROR_BODY))
endif

ifndef PRU_LOCAL_HOME
define LOCAL_ERROR_BODY

*******************************************************************************
You must define PRU_LOCAL_HOME so that the local libraries (installed with make install)
can be founds and their headers for compiled libraries are in a well known place. 
Typically  ../local
For instance: export PRU_LOCAL_HOME=../local
*******************************************************************************
endef
$(error $(LOCAL_ERROR_BODY))
endif

ifndef MACHINE_NAME
define MACHINE_ERROR_BODY

*********************************************************************
Please define MACHINE_NAME
For instance:
	make -f PRUMakefile MACHINE_NAME=arm_receiver_and_sender_from_pru0_to_pru1 [USING_RPMSG=defined if not using wrapper] [PRU=0/1]
	Select which PRU core, 0 receives from ARM, 1 sends back after it received from 0.
or
	make -f PRUMakefile MACHINE_NAME=pru1_receiver_from_pru0_back_to_arm [USING_RPMSG=defined if not using wrapper] [PRU=0/1]
	
	Don't define USING_RPMSG variable if using wrapper.
#	make -f PRUMakefile MACHINE_NAME=receiver_from_pru0_to_pru1_and_arm_sender [USING_RPMSG=defined]

*********************************************************************

endef
$(error $(MACHINE_ERROR_BODY))
endif

#ifeq ($(MACHINE_NAME),arm_receiver_and_sender_from_pru0_to_pru1)
#	GEN_DIR=gen0
#else
#	GEN_DIR=gen1
#endif

MKFILE_PATH = $(abspath $(lastword $(MAKEFILE_LIST)))
CURRENT_DIR = $(notdir $(patsubst %/,%,$(dir $(MKFILE_PATH))))
PROJ_NAME=$(CURRENT_DIR)
CURRENT_PATH=$(shell pwd)
UCFSM_DIR=../../PRU_ucfsm
LINKER_COMMAND_FILE=$(PRU_LOCAL_HOME)/include_TI_regs/AM57xx_PRU.cmd
LIBS= --library=$(PRU_LOCAL_HOME)/libs/PRU-ucfsm-timer.object --library=$(PRU_LOCAL_HOME)/libs/PRU-LEDS.object --library=$(PRU_LOCAL_HOME)/lib/rpmsg_lib.lib --library=$(PRU_LOCAL_HOME)/libs/pru_comms.object

GEN_DIR=gen0
INCLUDE_MACHINE_DIR=--include_path=$(GEN_DIR)/./$(MACHINE_NAME).machine --include_path=.
INCLUDE_UCFSM_DIR=--include_path=$(GEN_DIR)/ucfsm --include_path=$(GEN_DIR)
INCLUDE=--include_path=$(PRU_CGT)/include --include_path=$(PRU_LOCAL_HOME)/include_TI_regs  --include_path=$(PRU_LOCAL_HOME)/include_TI_regs/am572x_2_0  --include_path=$(PRU_LOCAL_HOME)/includes/
STACK_SIZE=0x100
HEAP_SIZE=0x200

#Common compiler and linker flags (Defined in 'PRU Optimizing C/C++ Compiler User's Guide)
CFLAGS=-v3 -O2 --display_error_number --endian=little --hardware_mac=on --obj_directory=$(GEN_DIR) --pp_directory=$(GEN_DIR) -ppd -ppa -DPRU_UCFSM --section_sizes=on #--write_diagnostics_file

#Linker flags (Defined in 'PRU Optimizing C/C++ Compiler User's Guide)
LFLAGS=--reread_libs --warn_sections --stack_size=$(STACK_SIZE) --heap_size=$(HEAP_SIZE)

TARGET=$(GEN_DIR)/$(PROJ_NAME)_$(GEN_DIR).exe
MAP=$(GEN_DIR)/$(PROJ_NAME).map
UCFSM_SOURCES=$(wildcard $(UCFSM_DIR)/*.cc)
UCFSM_SOURCES_COPIED=$(patsubst $(UCFSM_DIR)/%,%,$(UCFSM_SOURCES))
UCFSM_INCLUDES=$(wildcard *.h)
UCFSM_OBJECTS=$(patsubst %,$(GEN_DIR)/ucfsm/%,$(UCFSM_SOURCES_COPIED:.cc=.object))
MACHINE_SOURCES= $(filter-out %_Internal.mm, $(filter-out %_OnExit.mm, $(filter-out %_OnEntry.mm, $(filter-out %_OnResume.mm, $(filter-out %_OnSuspend.mm, $(filter-out  %VarRefs.mm,  $(wildcard ./$(MACHINE_NAME).machine/*.mm) ) ) ) ) ) )
MACHINE_CONFIG_SOURCES=$(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc
MACHINE_CC_SOURCES=$(patsubst %,$(GEN_DIR)/%,$(MACHINE_SOURCES:.mm=.cc))
MACHINE_OBJECTS=$(patsubst %,$(GEN_DIR)/%,$(MACHINE_SOURCES:.mm=.object))
MACHINE_CONFIG_OBJECTS=$(patsubst %,%,$(MACHINE_CONFIG_SOURCES:.cc=.object))
RESOURCE_TABLE_INCLUDES=$(GEN_DIR)/resource_table_defs_0.h

ifdef USING_RPMSG
CFLAGS+=-DUSING_RPMSG 
else
CFLAGS+=-DUSING_WRAPPER 
RESOURCE_TABLE_SOURCES=$(GEN_DIR)/Resource_Table_Wrapper.cpp
RESOURCE_TABLE_OBJECTS=$(patsubst %,%,$(RESOURCE_TABLE_SOURCES:.cpp=.object))
endif

ifeq ($(PRU), 1)
CFLAGS+=-DPRU1
GEN_DIR=gen1
endif

all: build_dir printStart $(TARGET) printEnd

test:
	@echo MKFILE_PATH = $(MKFILE_PATH)
	@echo CURRENT_DIR = $(CURRENT_DIR)
	@echo PROJ_NAME = $(PROJ_NAME)
	@echo CURRENT_PATH = $(CURRENT_PATH)
	@echo UCFSM_SOURCES = $(UCFSM_SOURCES)
	@echo UCFSM_SOURCES_COPIED = $(UCFSM_SOURCES_COPIED)
	@echo UCFSM_OBJECTS = $(UCFSM_OBJECTS)
	@echo MACHINE_CONFIG_SOURCES = $(MACHINE_CONFIG_SOURCES)
	@echo RESOURCE_TABLE_SOURCES = $(RESOURCE_TABLE_SOURCES)
	@echo RESOURCE_TABLE_OBJECTS = $(RESOURCE_TABLE_OBJECTS)

build_dir:
	mkdir -p $(GEN_DIR)

printStart:
	@echo ''
	@echo '************************************************************'
	@echo '************************************************************'
	@echo '***************** Building LOCAL project: $(PROJ_NAME)'
	@echo '************************************************************'
	@echo '***************** ucfsm files that need compilation: $(UCFSM_SOURCES)'
	@echo '************************************************************'
	@echo '***************** machine files that need compilation: $(MACHINE_SOURCES)'
	@echo '************************************************************'
	@echo '***************** machine files as CC that need compilation: $(MACHINE_CC_SOURCES)'
	@echo '************************************************************'
	@echo '***************** Corresponding ucfsm object files: $(UCFSM_OBJECTS)'
	@echo '************************************************************'
	@echo '***************** Corresponding machine object files to mm files: $(MACHINE_OBJECTS)'
	@echo '************************************************************'
	@echo '************************************************************'
	@echo '***************** Corresponding config machine object files: $(MACHINE_CONFIG_OBJECTS)'
	@echo '************************************************************'
	@echo ''

printEnd:
	@echo ''
	@echo 'Output files can be found in the "$(GEN_DIR)" directory'
	@echo ''
	@echo 'Finished building project: $(PROJ_NAME)'
	@echo '************************************************************'
	@echo ''


# Invokes the linker
$(TARGET): $(RESOURCE_TABLE_INCLUDES)  $(LINKER_COMMAND_FILE) $(RESOURCE_TABLE_OBJECTS)   copyUcfsm $(UCFSM_OBJECTS) copyMachine $(MACHINE_CONFIG_OBJECTS)  $(MACHINE_OBJECTS) 
	@echo ''
	@echo 'Building target: $@'
	@echo 'Invoking: PRU Linker'
	$(PRU_CGT)/bin/clpru $(CFLAGS) -z -i$(PRU_CGT)/lib -i$(PRU_CGT)/include $(LFLAGS) -o $(TARGET) $(UCFSM_OBJECTS)  $(MACHINE_OBJECTS) $(MACHINE_CONFIG_OBJECTS) $(RESOURCE_TABLE_OBJECTS)  -m$(MAP) $(LINKER_COMMAND_FILE) --library=libc.a $(LIBS)
	@echo 'Finished building target: $@'


# Create the build folder for the machine and copy accross the machine's files
# IGNORE any error in copying
copyMachine :  $(MACHINE_SOURCES)
	@echo ''
	@mkdir -p $(GEN_DIR)/$(MACHINE_NAME).machine
	@echo '#*#*#* Coping machine Files  files '
	-cp ./$(MACHINE_NAME).machine/*.h $(GEN_DIR)/./$(MACHINE_NAME).machine
	-cp ./$(MACHINE_NAME).machine/*VarRefs.mm $(GEN_DIR)/./$(MACHINE_NAME).machine
	-cp ./$(MACHINE_NAME).machine/*FuncRefs.mm $(GEN_DIR)/./$(MACHINE_NAME).machine | true
	-cp ./$(MACHINE_NAME).machine/*_OnExit.mm $(GEN_DIR)/./$(MACHINE_NAME).machine
	-cp ./$(MACHINE_NAME).machine/*_Internal.mm $(GEN_DIR)/./$(MACHINE_NAME).machine
	-cp ./$(MACHINE_NAME).machine/*.expr $(GEN_DIR)/./$(MACHINE_NAME).machine  | true
	-cp ./$(MACHINE_NAME).machine/*_OnEntry.mm $(GEN_DIR)/./$(MACHINE_NAME).machine
	@echo ''

$(MACHINE_CC_SOURCES) : $(MACHINE_SOURCES)
	@echo ''
	@echo '#*#*#* Using machine mm files copied to cc for building : $<'
	echo ' a FILENAME:  $(subst $(GEN_DIR)/./,,$(subst .cc,.mm,$@))'
	cp $(subst $(GEN_DIR)/./,,$(subst .cc,.mm,$@)) $@
	@echo ''

# Invokes the compiler on all mm (now cc) files in the machine directory to create the object files
$(MACHINE_OBJECTS): $(MACHINE_CC_SOURCES)
	@echo ''
	@echo '#*#*#* Building Machine object file: '
	@echo '#*#*#* Invoking: PRU Compiler'
	@echo '#*#*#*  Target $(subst .object,.cc,$@)'
	$(PRU_CGT)/bin/clpru $(INCLUDE) $(INCLUDE_MACHINE_DIR) $(INCLUDE_UCFSM_DIR) $(CFLAGS) -fe $@  $(subst .object,.cc,$@)
	@echo ''

$(MACHINE_CONFIG_OBJECTS):  $(MACHINE_CONFIG_SOURCES)
	@echo ''
	@echo '#*#*#* Building Machine Config object file: $<'
	@echo '#*#*#* Invoking: Host compiler on arrangement config files'
	$(PRU_CGT)/bin/clpru $(INCLUDE) $(INCLUDE_MACHINE_DIR) $(INCLUDE_UCFSM_DIR) $(CFLAGS) -fe $@ $<

$(RESOURCE_TABLE_OBJECTS):  $(RESOURCE_TABLE_SOURCES)
	@echo ''
	@echo '#*#*#* Building resource table object file: $<'
	@echo '#*#*#* Invoking: Host compiler on arrangement config files'
	$(PRU_CGT)/bin/clpru $(INCLUDE)  $(CFLAGS) -fe $@ $<

$(RESOURCE_TABLE_SOURCES): ./Resource_Table_Wrapper.cpp ./Resource_Table_Wrapper.h 
	@mkdir -p $(GEN_DIR)
	@echo '#*#*#* Building wrapper for resorce table to deliver for: $<'
	-cp ./Resource_Table_Wrapper.cpp $(GEN_DIR)/
	-cp ./Resource_Table_Wrapper.h $(GEN_DIR)/

$(RESOURCE_TABLE_INCLUDES): resource_table_RPMSG_defs_0.h resource_table_RPMSG_data_0.h 
	@mkdir -p $(GEN_DIR)
	@echo '#*#*#* Copying resource table includes for rpmsg : $<'
	-cp ./resource_table_RPMSG_data_1.h $(GEN_DIR)/
	-cp ./resource_table_RPMSG_data_0.h $(GEN_DIR)/
	-cp ./resource_table_RPMSG_defs_0.h $(GEN_DIR)/





###########################################
# Build Config for one machine
# #########################################
#$(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc : $(MACHINE_NAME).machine
$(MACHINE_CONFIG_SOURCES): $(MACHINE_NAME).machine
	@echo '#*#*#* Building ucfsm_config.cc for: $<'
	-rm -f $(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc
	echo '// GENERTAED config file for one machine only '>> $(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc
	echo '#include "${MACHINE_NAME}_Includes.h"'>> $(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc
	echo '#include "${MACHINE_NAME}.h"' >> $(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc
	echo '' >> $(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc
	echo 'static FSM::CLM::${MACHINE_NAME} machine;'  >> $(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc
	echo 'FSM::CLMachine *finite_state_machines[1] = {' >> $(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc
	echo '      &machine' >> $(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc
	echo '};' >> $(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc
	echo '' >> $(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc
	echo 'unsigned char number_of_fsms = 1;' >> $(GEN_DIR)/./$(MACHINE_NAME).machine/ucfsm_config.cc



# Create the build folder for a copy of ucfsm
# IGNORE any error in copying
copyUcfsm :  $(UCFSM_OBJECTS_LOCAL)
	@echo ''
	@mkdir -p $(GEN_DIR)/ucfsm
	@echo '#*#*#* Coping ucfsm Files  files '
	-cp $(UCFSM_DIR)/*.h $(GEN_DIR)/ucfsm
	-cp $(UCFSM_DIR)/*.cc $(GEN_DIR)/ucfsm
	@echo ''

$(UCFSM_OBJECTS): $(UCFSM_SOURCES)
	@echo ''
	@echo '#*#*#* Building ucfsm object file: $@' 
	@echo '#*#*#* Invoking: PRU compiler on ucfsm sources' 
	@echo '************** First Include Directive: $(INCLUDE)'
	@echo '************** Second Include Directive: $(INCLUDE_UCFSM_DIR)'
	@echo '************** CFLAGS Directive: $(CFLAGS)'
	$(PRU_CGT)/bin/clpru --verbose --gen_preprocessor_listing $(INCLUDE) $(INCLUDE_UCFSM_DIR)  $(CFLAGS) -fe $@ $(subst .object,.cc,$@)
	@echo ''

.PHONY: all clean

# Remove the $(GEN_DIR) directory
clean: build_dir
	@echo ''
	@echo '************************************************************'
	@echo 'Cleaning project: $(PROJ_NAME)'
	@echo ''
	@echo 'Removing files in the "$(GEN_DIR)" directory'
	@rm -rf $(GEN_DIR)
	@echo ''
	@echo 'Finished cleaning project: $(PROJ_NAME)'
	@echo '************************************************************'
	@echo ''
